// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestProject.Persistance.Database;

namespace TestProject.Persistance.Migrations
{
    [DbContext(typeof(TestProjectDbContext))]
    [Migration("20201211212907_Added_Link")]
    partial class Added_Link
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("TestProject.Domain.Models.SearchRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("SearchPhrase")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StatusUpdated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SearchRequests");
                });

            modelBuilder.Entity("TestProject.Domain.Models.SearchResultEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Link")
                        .HasColumnType("TEXT");

                    b.Property<string>("SearchEngine")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SearchRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SearchRequestId");

                    b.ToTable("SearchResultEntries");
                });

            modelBuilder.Entity("TestProject.Domain.Models.SearchResultEntry", b =>
                {
                    b.HasOne("TestProject.Domain.Models.SearchRequest", "SearchRequest")
                        .WithMany()
                        .HasForeignKey("SearchRequestId");

                    b.Navigation("SearchRequest");
                });
#pragma warning restore 612, 618
        }
    }
}
